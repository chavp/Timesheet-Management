@model IList<PJ_CWN019.TM.Support.Web.Models.ProfileLogsOverviewView>

@{
    ViewBag.Title = "ProfileLogs";
}

<div class="panel panel-info">
    <div class="panel-heading">Profile Logs Bar Chart (@ViewBag.ForDate.ToString("dd/MM/yyyy")) </div>
    <svg class="chart">

    </svg>
</div>

<div class="panel panel-success">
    <div class="panel-heading">Profile Logs (@ViewBag.ForDate.ToString("dd/MM/yyyy")) </div>
    <table class="table table-striped table-hover table-condensed">
        <thead>
            <tr>
                <th>Latest Event Date</th>
                <th>Action</th>
                <th>Controller</th>
                <th>Avg. Elapsed Time (s)</th>
                <th>Total Call</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.LatestEventDate</td>
                    <td>@item.Action</td>
                    <td>@item.Controller</td>
                    <td>@item.AvgElapsedTime.ToString("0.####")</td>
                    <td>@item.TotalCall</td>
                    <td>
                        <a class="btn btn-info" 
                            href="@Url.Action("ProfileLogDetails", "Home",
                                new {
                                    id = item.ID,
                                    forDate = item.LatestEventDate.Date,
                                    actionName = item.Action,
                                    controllerName = item.Controller,
                                })" id="@item.ID">Details</a>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>

    .bar {
      fill: steelblue;
    }

    .highlight {
      fill: rgb(55, 167, 118);
    }

    .axis text {
      font: 11px sans-serif;
      
    }

    .axis path,
    .axis line {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
    }

    .x.axis path {
      display: none;
    }

    div.tooltip {   
      position: absolute;           
      text-align: center;           
      width: auto;                  
      height: auto;                 
      padding: 2px;             
      font: 12px sans-serif;        
      background: lightsteelblue;   
      margin: 5px;    
      border-radius: 8px;           
      pointer-events: none;         
    }

</style>

@section scripts{
    @Scripts.Render("~/bundles/d3")
    <script>
        $(function () {
            var margin = { top: 20, right: 10, bottom: 200, left: 40 },
                width = 980 - margin.left - margin.right,
                height = 600 - margin.top - margin.bottom;

            var x = d3.scale.ordinal()
                .rangeRoundBands([0, width], .1);

            var y = d3.scale.linear()
                .range([height, 0]);

            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom");

            var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left");

            var chart = d3.select(".chart")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
              .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

            var div = d3.select("body").append("div")
                    .attr("class", "tooltip")
                    .style("opacity", 0);

            d3.json('@Url.Action("GetProfileLogs", "Home", new { forDate = ViewBag.ForDate })',
                function (error, data) {
                    
                    x.domain(data.map(function (d) { return d.Name; }));
                    y.domain([0, d3.max(data, function (d) { return d.TotalCall; })]);

                    chart.append("g")
                        .attr("class", "x axis")
                        .attr("transform", "translate(0," + height + ")")
                        .call(xAxis).selectAll("text")
                             .style("text-anchor", "end")
                             .attr("dx", "-.7em")
                             .attr("dy", ".01em")
                             .attr("transform", function (d) {
                                 return "rotate(-90)"
                             });

                    chart.append("g")
                        .attr("class", "y axis")
                        .call(yAxis);

                    var enter = chart.selectAll(".bar")
                        .data(data);

                    enter.enter()
                        .append("rect")
                            .attr("class", "bar")
                            .attr("x", function (d) { return x(d.Name); })
                            .attr("y", function (d) { return y(d.TotalCall); })
                            .attr("height", function (d) { return height - y(d.TotalCall); })
                            .attr("width", x.rangeBand())
                            .on("mouseover", function (d) {
                                d3.select(d3.event.target).classed("highlight", true);
                                div.transition()
                                    .duration(200)
                                    .style("opacity", .9);
                                div.html(d.TotalCall + " times<br/>" + d.Name + "<br/>" + d.AvgElapsedTime + " s")
                                    .style("left", (d3.event.pageX) + "px")
                                    .style("top", (d3.event.pageY - 75) + "px");
                            })
                            .on("mouseout", function (d) {
                                d3.select(d3.event.target).classed("highlight", false);
                                div.transition()
                                    .duration(500)
                                    .style("opacity", 0);
                            })
                        .append("text")
                            .attr("x", x.rangeBand() / 2)
                            .attr("y", function (d) { return y(d.TotalCall) + 3; })
                            .attr("dy", ".75em")
                        .text(function (d) { return d.AvgElapsedTime; })

                    chart.append("g")
                        .attr("class", "y axis")
                        .call(yAxis)
                      .append("text")
                        .attr("transform", "rotate(-90)")
                        .attr("y", 3)
                        .attr("dy", ".71em")
                        .style("text-anchor", "end")
                        .text("Total Call");

                    enter.exit().remove();
                }
            );

            function type(d) {
                d.TotalCall = +d.TotalCall; // coerce to number
                return d;
            }
        });
    </script>
}